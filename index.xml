<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Hi! I&#39;m Melvin</title>
    <link>/</link>
    <description>Recent content on Hi! I&#39;m Melvin</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>&lt;a href=&#34;https://creativecommons.org/licenses/by-nc/4.0/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;CC BY-NC 4.0&lt;/a&gt;</copyright>
    <lastBuildDate>Fri, 27 Mar 2020 08:27:09 +0100</lastBuildDate>
    
	<atom:link href="/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>AutoPKG</title>
      <link>/posts/2020/03/autopkg/</link>
      <pubDate>Fri, 27 Mar 2020 08:27:09 +0100</pubDate>
      
      <guid>/posts/2020/03/autopkg/</guid>
      <description> AutoPKG applications for Jamf </description>
    </item>
    
    <item>
      <title>macOS Change default application for UTI</title>
      <link>/posts/2019/09/macos-change-default-application-for-uti/</link>
      <pubDate>Wed, 25 Sep 2019 10:59:08 +0200</pubDate>
      
      <guid>/posts/2019/09/macos-change-default-application-for-uti/</guid>
      <description>#!/bin/bash  ############################ ##### Script Variables ##### ############################ # $currentuser = Get the current logged in user # $default_app = Application used as default # $types = Uniform Type Identifer of the file type that needs to be adjusted currentuser=$(/usr/bin/python -c &amp;#39;from SystemConfiguration import SCDynamicStoreCopyConsoleUser; import sys; username = (SCDynamicStoreCopyConsoleUser(None, None, None) or [None])[0]; username = [username,&amp;#34;&amp;#34;][username in [u&amp;#34;loginwindow&amp;#34;, None, u&amp;#34;&amp;#34;]]; sys.stdout.write(username + &amp;#34;\n&amp;#34;);&amp;#39;) default_app=&amp;#39;&amp;#34;com.google.chrome&amp;#34;&amp;#39; declare -a types=(&amp;#39;&amp;#34;com.microsoft.word.doc&amp;#34;&amp;#39; &amp;#39;&amp;#34;org.openxmlformats.wordprocessingml.document&amp;#34;&amp;#39; &amp;#39;&amp;#34;com.microsoft.powerpoint.ppt&amp;#34;&amp;#39; &amp;#39;&amp;#34;org.</description>
    </item>
    
    <item>
      <title>Postfix Multi Instance</title>
      <link>/posts/2019/09/postfix-multi-instance/</link>
      <pubDate>Thu, 19 Sep 2019 15:19:46 +0200</pubDate>
      
      <guid>/posts/2019/09/postfix-multi-instance/</guid>
      <description>Decisions decisions Why are we doing this I was challenged with finding a solution to split up our incoming mailflow and push it through separate content filters. As we&amp;rsquo;re trying to split mails within the same domain we were unable to make this decision within a single postfix instance as it would only read a single transport map.
Therefore we&amp;rsquo;ve chosen to run multiple instances to make decisions based on a 1st and 2nd transport map.</description>
    </item>
    
    <item>
      <title>Jamf, Git2jss and Teamcity</title>
      <link>/posts/2019/03/jamf-git2jss-and-teamcity/</link>
      <pubDate>Wed, 06 Mar 2019 21:05:47 +0100</pubDate>
      
      <guid>/posts/2019/03/jamf-git2jss-and-teamcity/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Hugo, Wercker and Github Pages</title>
      <link>/posts/2019/03/hugo-wercker-and-github-pages/</link>
      <pubDate>Sat, 02 Mar 2019 19:15:26 +0100</pubDate>
      
      <guid>/posts/2019/03/hugo-wercker-and-github-pages/</guid>
      <description>From Hugo for Github Pages Recently I&amp;rsquo;ve started using Hugo to build my personal homepage and blog while serving it using Github Pages. First I started out by updating my Github Pages repository using a deploy script within the Hugo file repository. Of course that&amp;rsquo;s not the way to go so instead I&amp;rsquo;ve been building a deployment pipeline using Wercker.
TL;DR  Create Github repositories (Hugo &amp;amp; Github Pages)</description>
    </item>
    
    <item>
      <title>Jamf meets Splunk</title>
      <link>/posts/2019/03/jamf-meets-splunk/</link>
      <pubDate>Fri, 01 Mar 2019 14:32:10 +0100</pubDate>
      
      <guid>/posts/2019/03/jamf-meets-splunk/</guid>
      <description>Jamf metrics to SplunkEnterprise Since we like to have insights in our enrollments we were looking for a solution that could update data as close to realtime as possible. We ended up using Splunk and a intermediate script server. The script server is performing the API call and providing data to the file that&amp;rsquo;s being monitored by the SplunkForwarder.
The script that&amp;rsquo;s performing the API call is the following.</description>
    </item>
    
    <item>
      <title>Jamf Self Service and Win10 VMs</title>
      <link>/posts/2019/03/jamf-self-service-and-win10-vms/</link>
      <pubDate>Fri, 01 Mar 2019 13:57:04 +0100</pubDate>
      
      <guid>/posts/2019/03/jamf-self-service-and-win10-vms/</guid>
      <description> Auto install Win 10 VBox VM&amp;rsquo;s through Jamf self service </description>
    </item>
    
    <item>
      <title>Rename machine script</title>
      <link>/posts/2019/02/rename-machine-script/</link>
      <pubDate>Thu, 28 Feb 2019 19:53:04 +0100</pubDate>
      
      <guid>/posts/2019/02/rename-machine-script/</guid>
      <description>This post is to test the PrismJS syntax highlighting.
#!/usr/bin/env bash  ############################ ##### Script Variables ##### ############################ # $API_USER (jamf parameter 4) # $API_PASSWORD (jamf parameter 5) CURRENTHOSTNAME=$(/usr/sbin/scutil --get ComputerName) CURRENTCOMPUTERNAME=$(/usr/sbin/scutil --get LocalHostName) CURRENTLOCALHOSTNAME=$(/usr/sbin/scutil --get HostName) API_URL=$(defaults read /Library/Preferences/com.jamfsoftware.jamf.plist jss_url) API_USER=$4 API_PASSWORD=$5 SLACKTOKEN=$6 SERIALNUMBER=$(system_profiler SPHardwareDataType | grep &amp;#39;Serial Number (system)&amp;#39; | awk &amp;#39;{print $NF}&amp;#39;) # Get Mac data from jamf (using serialnumber, requesting ONLY the extensionattributes subset) curl -s -u $API_USER:$API_PASSWORD &amp;#34;$API_URL&amp;#34;JSSResource/computers/serialnumber/$SERIALNUMBER/subset/General\&amp;amp;extension_attributes -X GET -H &amp;#34;Accept: application/xml&amp;#34; &amp;gt; /tmp/remediation-hostname.</description>
    </item>
    
    <item>
      <title>About</title>
      <link>/about/</link>
      <pubDate>Thu, 28 Feb 2019 00:00:00 +0000</pubDate>
      
      <guid>/about/</guid>
      <description> Hi! I&amp;rsquo;m Melvin Developer at Coolblue and father of a beautiful daughter.
Super secret dogo stuff to discuss üê∂ Please use the following PGP fingerprint to email me at melvin@mlvn.io.
AF34 16CA FED5 365F 1947 3416 5137 6717 9406 FC85  </description>
    </item>
    
  </channel>
</rss>