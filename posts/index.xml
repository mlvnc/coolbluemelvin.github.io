<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>Posts on Hi! I&#39;m Melvin</title>
        <link>/posts/</link>
        <description>Recent content in Posts on Hi! I&#39;m Melvin</description>
        <generator>Hugo -- gohugo.io</generator>
        <language>en-us</language>
        <copyright>&lt;a href=&#34;https://creativecommons.org/licenses/by-nc/4.0/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;CC BY-NC 4.0&lt;/a&gt;</copyright>
        <lastBuildDate>Fri, 27 Mar 2020 08:27:09 +0100</lastBuildDate>
        <atom:link href="/posts/index.xml" rel="self" type="application/rss+xml" />
        
        <item>
            <title>AutoPKG</title>
            <link>/posts/2020/03/autopkg/</link>
            <pubDate>Fri, 27 Mar 2020 08:27:09 +0100</pubDate>
            
            <guid>/posts/2020/03/autopkg/</guid>
            <description>AutoPKG applications for Jamf Test!</description>
            <content type="html"><![CDATA[

<h3 id="autopkg-applications-for-jamf">AutoPKG applications for Jamf</h3>

<p>Test!</p>
]]></content>
        </item>
        
        <item>
            <title>macOS Change default application for UTI</title>
            <link>/posts/2019/09/macos-change-default-application-for-uti/</link>
            <pubDate>Wed, 25 Sep 2019 10:59:08 +0200</pubDate>
            
            <guid>/posts/2019/09/macos-change-default-application-for-uti/</guid>
            <description>#!/bin/bash  ############################ ##### Script Variables ##### ############################ # $currentuser = Get the current logged in user # $default_app = Application used as default # $types = Uniform Type Identifer of the file type that needs to be adjusted currentuser=$(/usr/bin/python -c &amp;#39;from SystemConfiguration import SCDynamicStoreCopyConsoleUser; import sys; username = (SCDynamicStoreCopyConsoleUser(None, None, None) or [None])[0]; username = [username,&amp;#34;&amp;#34;][username in [u&amp;#34;loginwindow&amp;#34;, None, u&amp;#34;&amp;#34;]]; sys.stdout.write(username + &amp;#34;\n&amp;#34;);&amp;#39;) default_app=&amp;#39;&amp;#34;com.google.chrome&amp;#34;&amp;#39; declare -a types=(&amp;#39;&amp;#34;com.microsoft.word.doc&amp;#34;&amp;#39; &amp;#39;&amp;#34;org.openxmlformats.wordprocessingml.document&amp;#34;&amp;#39; &amp;#39;&amp;#34;com.microsoft.powerpoint.ppt&amp;#34;&amp;#39; &amp;#39;&amp;#34;org.</description>
            <content type="html"><![CDATA[<div class="highlight"><pre class="chroma"><code class="language-bash" data-lang="bash"><span class="cp">#!/bin/bash
</span><span class="cp"></span>
<span class="c1">############################</span>
<span class="c1">##### Script Variables #####</span>
<span class="c1">############################</span>
<span class="c1"># $currentuser = Get the current logged in user</span>
<span class="c1"># $default_app = Application used as default</span>
<span class="c1"># $types = Uniform Type Identifer of the file type that needs to be adjusted</span>

<span class="nv">currentuser</span><span class="o">=</span><span class="k">$(</span>/usr/bin/python -c <span class="s1">&#39;from SystemConfiguration import SCDynamicStoreCopyConsoleUser; import sys; username = (SCDynamicStoreCopyConsoleUser(None, None, None) or [None])[0]; username = [username,&#34;&#34;][username in [u&#34;loginwindow&#34;, None, u&#34;&#34;]]; sys.stdout.write(username + &#34;\n&#34;);&#39;</span><span class="k">)</span>
<span class="nv">default_app</span><span class="o">=</span><span class="s1">&#39;&#34;com.google.chrome&#34;&#39;</span>
<span class="nb">declare</span> -a <span class="nv">types</span><span class="o">=(</span><span class="s1">&#39;&#34;com.microsoft.word.doc&#34;&#39;</span>
                  <span class="s1">&#39;&#34;org.openxmlformats.wordprocessingml.document&#34;&#39;</span>
                  <span class="s1">&#39;&#34;com.microsoft.powerpoint.ppt&#34;&#39;</span>
                  <span class="s1">&#39;&#34;org.openxmlformats.presentationml.presentation&#34;&#39;</span>
                  <span class="s1">&#39;&#34;com.microsoft.excel.xls&#34;&#39;</span>
                  <span class="s1">&#39;&#34;org.openxmlformats.spreadsheetml.sheet&#34;&#39;</span><span class="o">)</span>

<span class="k">for</span> <span class="nb">type</span> in <span class="s2">&#34;</span><span class="si">${</span><span class="nv">types</span><span class="p">[@]</span><span class="si">}</span><span class="s2">&#34;</span><span class="p">;</span> <span class="k">do</span>
  sudo -u <span class="nv">$currentuser</span> python -c <span class="s1">&#39;from LaunchServices import LSSetDefaultRoleHandlerForContentType; LSSetDefaultRoleHandlerForContentType(&#39;</span><span class="nv">$type</span><span class="s1">&#39;, 0x00000002, &#39;</span><span class="nv">$default_app</span><span class="s1">&#39;)&#39;</span>
  <span class="nb">echo</span> <span class="s2">&#34;Set </span><span class="nv">$default_app</span><span class="s2"> as default application for </span><span class="nv">$type</span><span class="s2">&#34;</span>
<span class="k">done</span></code></pre></div>]]></content>
        </item>
        
        <item>
            <title>Postfix Multi Instance</title>
            <link>/posts/2019/09/postfix-multi-instance/</link>
            <pubDate>Thu, 19 Sep 2019 15:19:46 +0200</pubDate>
            
            <guid>/posts/2019/09/postfix-multi-instance/</guid>
            <description>Decisions decisions Why are we doing this I was challenged with finding a solution to split up our incoming mailflow and push it through separate content filters. As we&amp;rsquo;re trying to split mails within the same domain we were unable to make this decision within a single postfix instance as it would only read a single transport map.
Therefore we&amp;rsquo;ve chosen to run multiple instances to make decisions based on a 1st and 2nd transport map.</description>
            <content type="html"><![CDATA[

<h1 id="decisions-decisions">Decisions decisions</h1>

<h2 id="why-are-we-doing-this">Why are we doing this</h2>

<p>I was challenged with finding a solution to split up our incoming mailflow and push it through separate content filters. As we&rsquo;re trying to split mails within the same domain we were unable to make this decision within a single postfix instance as it would only read a single transport map.</p>

<p>Therefore we&rsquo;ve chosen to run multiple instances to make decisions based on a 1st and 2nd transport map. The reason we need two transport maps is because besides the content filter split we also use different applications as endpoints for certain mail addresses.</p>

<h2 id="how-are-we-going-to-do-this">How are we going to do this</h2>

<h3 id="first">First</h3>

<p>&hellip;we need to enable postfix multi instance.</p>

<p>We&rsquo;re calling the second instance postfix-delivery as that&rsquo;s what the main goal of the instance will be. We keep the initial postfix instance to decide which content filter the mail gets routed to.</p>
<div class="highlight"><pre class="chroma"><code class="language-bash" data-lang="bash"><span class="c1">####Initiate MultiInstance</span>
postmulti -e init

<span class="c1">####Create Secondary Instance postfix-delivery</span>
postmulti -I postfix-delivery -e create

<span class="c1">####Enable Secondary Instance</span>
postmulti -i postfix-delivery -e enable</code></pre></div>
<h3 id="next">Next</h3>

<p>&hellip;we need to configure the new instance&rsquo;s main and master configs.</p>

<p>The main instance will run on port :25 and transports to the filters default ports. The filters will return the mail to the second instance on port :100025. This way we can transport mail based on two transport maps and have granularly control over which mail goes through which filter.</p>

<p>The transport map of the (initial) postfix instance running on port :25 would look like following:</p>
<div class="highlight"><pre class="chroma"><code class="language-textile" data-lang="textile">firstmailaddress@domain.com         smtp:secondaryfilter.domain.com:25
secondmailaddress@otherdomain.com   smtp:secondaryfilter.domain.com:25
*                                   smtp:primaryfilter.domain.com:10024</code></pre></div>
<p>This will route the mails to the specified filters whereas our primary filter is a Amavis cluster and the secondary filter a third party solution. As we are &ldquo;Proof Of Concept&rdquo;ing this we wanted to have control over the addresses that go through the third party solution. Both filters will return their mail to the second postfix instance listening on port :10025. This instance has the following transport and recipient canonical map:</p>

<p>Transport map:</p>
<div class="highlight"><pre class="chroma"><code class="language-textile" data-lang="textile">*                                   smtp:[aspmx.l.google.com]
thirdmailaddress@domain.com         smtp:[1.2.3.4]</code></pre></div>
<p>Recipient canonical map:</p>
<div class="highlight"><pre class="chroma"><code class="language-textile" data-lang="textile">firstmailaddress@domain.com         alias123@application.com
secondmailaddress@otherdomain.com   alias321@application.com</code></pre></div>

    <figure class="center" >
        <img src="/images/postfix-multi.png"  alt="postfix-multi"   style="border-radius: 6px;"  />

        
    </figure>


]]></content>
        </item>
        
        <item>
            <title>Jamf, Git2jss and Teamcity</title>
            <link>/posts/2019/03/jamf-git2jss-and-teamcity/</link>
            <pubDate>Wed, 06 Mar 2019 21:05:47 +0100</pubDate>
            
            <guid>/posts/2019/03/jamf-git2jss-and-teamcity/</guid>
            <description></description>
            <content type="html"><![CDATA[]]></content>
        </item>
        
        <item>
            <title>Hugo, Wercker and Github Pages</title>
            <link>/posts/2019/03/hugo-wercker-and-github-pages/</link>
            <pubDate>Sat, 02 Mar 2019 19:15:26 +0100</pubDate>
            
            <guid>/posts/2019/03/hugo-wercker-and-github-pages/</guid>
            <description>From Hugo for Github Pages Recently I&amp;rsquo;ve started using Hugo to build my personal homepage and blog while serving it using Github Pages. First I started out by updating my Github Pages repository using a deploy script within the Hugo file repository. Of course that&amp;rsquo;s not the way to go so instead I&amp;rsquo;ve been building a deployment pipeline using Wercker.
TL;DR  Create Github repositories (Hugo &amp;amp; Github Pages)</description>
            <content type="html"><![CDATA[

<h1 id="from-hugo-for-github-pages">From Hugo for Github Pages</h1>

<p>Recently I&rsquo;ve started using Hugo to build my personal homepage and blog while serving it using Github Pages. First I started out by updating my Github Pages repository using a deploy script within the Hugo file repository. Of course that&rsquo;s not the way to go so instead I&rsquo;ve been building a deployment pipeline using <a href="https://app.wercker.com/melvincornelissen/mlvn.io/installing/">Wercker</a>.</p>

<h2 id="tl-dr">TL;DR</h2>

<ol>
<li><p>Create <a href="https://github.com">Github</a> repositories (Hugo &amp; Github Pages)</p></li>

<li><p>Install <a href="https://gohugo.io">Hugo</a> in the Hugo repository</p></li>

<li><p>Add <a href="https://gohugo.io">Hugo</a> repository to <a href="https://app.wercker.com">Wercker</a></p>

<ul>
<li>Add the <a href="https://app.wercker.com/steps/melvincornelissen/gh-pages">gh-pages</a> to the deploy pipeline</li>
<li>Add the <a href="https://github.com/settings/tokens">Github personal access token</a> to the deploy pipeline</li>
</ul></li>

<li><p>Trigger a build by pushing a commit into the Hugo repository</p></li>
</ol>

<h2 id="prerequisites">Prerequisites</h2>

<ul>
<li>Github Repository for the Hugo files</li>
<li>Github Repository for the Github page (username.github.io)</li>
<li><a href="https://github.com/settings/tokens">Github personal access token</a></li>
<li><a href="https://app.wercker.com/">Wercker</a> account</li>
</ul>

<h3 id="optional">Optional</h3>

<ul>
<li>Github Repository for the Wercker buildstep</li>
<li><a href="https://www.codacy.com/">Codacy</a> account</li>
</ul>

<h2 id="wercker-build-step">Wercker build step</h2>

<p>Within Wercker there are several build steps already created which you can use for deploying to Github Pages. I however decided to build my own based on uetchy/gh-pages in order to have more control over the script actually running the deployment. You&rsquo;ll need a Github Repository with the following files to build and deploy your own build steps.</p>

<ul>
<li>run.sh</li>
<li>step.yml</li>
<li>wercker.yml</li>
</ul>

<p>The <code>run.sh</code> will contain the script performing the deployment to Github Pages, <code>step.yml</code> contains the build step specific information like the name and all properties and last the <code>wercker.yml</code> file contains the build and deployment steps for the build step itself. The <code>wercker.yml</code> eventually pushes the step into the &ldquo;Steps Store&rdquo; in Wercker.</p>

<p>In case you&rsquo;re interested, my build step can be found in this <a href="https://github.com/coolbluemelvin/wercker-step-gh-pages">Github Repository</a></p>

<h2 id="deployment">Deployment</h2>

<p>The wercker.yml file:</p>
<div class="highlight"><pre class="chroma"><code class="language-yaml" data-lang="yaml">box<span class="p">:</span><span class="w"> </span>debian<span class="w">
</span><span class="w"></span>build<span class="p">:</span><span class="w">
</span><span class="w">    </span><span class="c"># Steps make up the actions in your pipeline</span><span class="w">
</span><span class="w">    </span><span class="c"># Read more about steps on our dev center:</span><span class="w">
</span><span class="w">    </span><span class="c"># https://devcenter.wercker.com/development/steps/</span><span class="w">
</span><span class="w">
</span><span class="w">  </span>steps<span class="p">:</span><span class="w">
</span><span class="w">    </span>-<span class="w"> </span>install-packages<span class="p">:</span><span class="w">
</span><span class="w">        </span>packages<span class="p">:</span><span class="w"> </span>git<span class="w"> </span>curl<span class="w">
</span><span class="w">    </span>-<span class="w"> </span>script<span class="p">:</span><span class="w">
</span><span class="w">        </span>name<span class="p">:</span><span class="w"> </span>download<span class="w"> </span>hugo<span class="w"> </span>theme<span class="w">
</span><span class="w">        </span>cwd<span class="p">:</span><span class="w"> </span>themes/<span class="w">
</span><span class="w">        </span>code<span class="p">:</span><span class="w"> </span>git<span class="w"> </span>clone<span class="w"> </span>https<span class="p">:</span>//github.com/rhazdon/hugo-theme-hello-friend-ng.git<span class="w"> </span>hello-friend-ng<span class="w">
</span><span class="w">    </span>-<span class="w"> </span>arjen/hugo-build<span class="p">:</span><span class="w">
</span><span class="w">        </span>basedir<span class="p">:</span><span class="w"> </span><span class="s2">&#34;/&#34;</span><span class="w">
</span><span class="w">        </span>version<span class="p">:</span><span class="w"> </span><span class="s2">&#34;0.53&#34;</span><span class="w">
</span><span class="w">        </span>theme<span class="p">:</span><span class="w"> </span>hello-friend-ng<span class="w">
</span><span class="w">        </span>flags<span class="p">:</span><span class="w"> </span>--buildDrafts=<span class="kc">true</span><span class="w">
</span><span class="w">
</span><span class="w"></span>deploy<span class="p">:</span><span class="w">
</span><span class="w">  </span>steps<span class="p">:</span><span class="w">
</span><span class="w">    </span>-<span class="w"> </span>install-packages<span class="p">:</span><span class="w">
</span><span class="w">        </span>packages<span class="p">:</span><span class="w"> </span>git<span class="w"> </span>curl<span class="w">
</span><span class="w">    </span>-<span class="w"> </span>melvincornelissen/gh-pages<span class="p">:</span><span class="w">
</span><span class="w">        </span>token<span class="p">:</span><span class="w"> </span>$GIT_TOKEN<span class="w">
</span><span class="w">        </span>domain<span class="p">:</span><span class="w"> </span>mlvn.io<span class="w">
</span><span class="w">        </span>repo<span class="p">:</span><span class="w"> </span>coolbluemelvin/coolbluemelvin.github.io<span class="w">
</span><span class="w">        </span>path<span class="p">:</span><span class="w"> </span>public</code></pre></div>

    <figure class="center" >
        <img src="/images/wercker.png"  alt="wercker"   style="border-radius: 6px;"  />

        
    </figure>




    <figure class="center" >
        <img src="/images/wercker-build.png"  alt="wercker-build"   style="border-radius: 6px;"  />

        
    </figure>




    <figure class="center" >
        <img src="/images/wercker-deploy.png"  alt="wercker-deploy"   style="border-radius: 6px;"  />

        
    </figure>




    <figure class="center" >
        <img src="/images/codacy.png"  alt="codacy"   style="border-radius: 6px;"  />

        
    </figure>




    <figure class="center" >
        <img src="/images/codacy-checks.png"  alt="codacy-checks"   style="border-radius: 6px;"  />

        
    </figure>




    <figure class="center" >
        <img src="/images/codacy-overview.png"  alt="codacy-overview"   style="border-radius: 6px;"  />

        
    </figure>


]]></content>
        </item>
        
        <item>
            <title>Jamf meets Splunk</title>
            <link>/posts/2019/03/jamf-meets-splunk/</link>
            <pubDate>Fri, 01 Mar 2019 14:32:10 +0100</pubDate>
            
            <guid>/posts/2019/03/jamf-meets-splunk/</guid>
            <description>Jamf metrics to SplunkEnterprise Since we like to have insights in our enrollments we were looking for a solution that could update data as close to realtime as possible. We ended up using Splunk and a intermediate script server. The script server is performing the API call and providing data to the file that&amp;rsquo;s being monitored by the SplunkForwarder.
The script that&amp;rsquo;s performing the API call is the following.</description>
            <content type="html"><![CDATA[

<h3 id="jamf-metrics-to-splunkenterprise">Jamf metrics to SplunkEnterprise</h3>

<p>Since we like to have insights in our enrollments we were looking for a solution that could update data as close to realtime as possible. We ended up using Splunk and a intermediate script server. The script server is performing the API call and providing data to the file that&rsquo;s being monitored by the SplunkForwarder.</p>

<p>The script that&rsquo;s performing the API call is the following.</p>
<div class="highlight"><pre class="chroma"><code class="language-powershell" data-lang="powershell"><span class="c">#gather all enrolled computers</span>
<span class="k">function</span> <span class="n">Jamf_API_call</span> <span class="p">{</span>
<span class="nv">$headers</span> <span class="p">=</span> <span class="nb">New-Object</span> <span class="s2">&#34;System.Collections.Generic.Dictionary[[String],[String]]&#34;</span>
<span class="nv">$headers</span><span class="p">.</span><span class="n">Add</span><span class="p">(</span><span class="s2">&#34;Accept&#34;</span><span class="p">,</span> <span class="s1">&#39;application/json;version=24&#39;</span><span class="p">)</span>
<span class="nv">$headers</span><span class="p">.</span><span class="n">Add</span><span class="p">(</span><span class="s2">&#34;Authorization&#34;</span><span class="p">,</span> <span class="s1">&#39;Basic $jamf_api_auth&#39;</span><span class="p">)</span>

<span class="nv">$data</span> <span class="p">=</span> <span class="nb">Invoke-RestMethod</span> <span class="s2">&#34;https://$jamf_url/JSSResource/computers&#34;</span> <span class="n">-Headers</span> <span class="nv">$headers</span> <span class="n">-OutFile</span> <span class="n">jamf</span><span class="p">.</span><span class="n">json</span>
<span class="nv">$data</span> <span class="p">=</span> <span class="nb">get-content</span> <span class="n">jamf</span><span class="p">.</span><span class="n">json</span> <span class="p">|</span> <span class="nb">convertfrom-json</span>

<span class="nv">$script:macOS_jamf</span> <span class="p">=</span> <span class="nv">$data</span><span class="p">.</span><span class="n">computers</span><span class="p">.</span><span class="n">id</span>
<span class="p">}</span>

<span class="c">#grep General, Hardware, Location and extension_attributes data per computer and add to the log</span>
<span class="k">function</span> <span class="n">Jamf_DATA</span> <span class="p">{</span>
<span class="k">Foreach</span> <span class="p">(</span><span class="nv">$id</span> <span class="k">in</span> <span class="nv">$macOS_jamf</span><span class="p">)</span>
<span class="p">{</span>
<span class="nv">$headers</span> <span class="p">=</span> <span class="nb">New-Object</span> <span class="s2">&#34;System.Collections.Generic.Dictionary[[String],[String]]&#34;</span>
<span class="nv">$headers</span><span class="p">.</span><span class="n">Add</span><span class="p">(</span><span class="s2">&#34;Accept&#34;</span><span class="p">,</span> <span class="s1">&#39;application/json;version=24&#39;</span><span class="p">)</span>
<span class="nv">$headers</span><span class="p">.</span><span class="n">Add</span><span class="p">(</span><span class="s2">&#34;Authorization&#34;</span><span class="p">,</span> <span class="s1">&#39;Basic $jamf_api_auth&#39;</span><span class="p">)</span>
<span class="nv">$mac_data</span> <span class="p">=</span> <span class="nb">Invoke-RestMethod</span> <span class="s2">&#34;https://$jamf_url/JSSResource/computers/id/$id/subset/General&amp;Hardware&amp;Location&amp;extensionattributes&#34;</span> <span class="n">-Headers</span> <span class="nv">$headers</span> <span class="n">-OutFile</span> <span class="n">jamf-out</span><span class="p">.</span><span class="n">json</span>
<span class="nv">$mac_data_new</span> <span class="p">=</span> <span class="nb">get-content</span> <span class="n">jamf-out</span><span class="p">.</span><span class="n">json</span>
<span class="nv">$date</span> <span class="p">=</span> <span class="nb">Get-Date</span>
<span class="s2">&#34;$date $mac_data_new&#34;</span> <span class="p">|</span> <span class="nb">Out-File</span> <span class="n">-Append</span> <span class="p">/</span><span class="n">var</span><span class="p">/</span><span class="n">log</span><span class="p">/</span><span class="n">jamf</span><span class="p">/</span><span class="n">jamf-monitor</span>
<span class="p">}</span>
<span class="p">}</span>

<span class="n">Jamf_API_call</span>
<span class="n">Jamf_DATA</span></code></pre></div>
<p>First we are gathering all enrolled machines using <code>$data = Invoke-RestMethod &quot;https://$jamf_url/JSSResource/computers&quot; -Headers $headers -OutFile jamf.json</code>. That returns a file looking like:</p>
<div class="highlight"><pre class="chroma"><code class="language-json" data-lang="json"><span class="p">{</span>
  <span class="nt">&#34;computers&#34;</span><span class="p">:</span> <span class="p">[</span>
    <span class="p">{</span>
      <span class="nt">&#34;id&#34;</span><span class="p">:</span> <span class="mi">148</span><span class="p">,</span>
      <span class="nt">&#34;name&#34;</span><span class="p">:</span> <span class="s2">&#34;nldm-l5e4&#34;</span>
    <span class="p">},</span>
    <span class="p">{</span>
      <span class="nt">&#34;id&#34;</span><span class="p">:</span> <span class="mi">151</span><span class="p">,</span>
      <span class="nt">&#34;name&#34;</span><span class="p">:</span> <span class="s2">&#34;nldm-5vht&#34;</span>
    <span class="p">},</span>
    <span class="p">{</span>
      <span class="nt">&#34;id&#34;</span><span class="p">:</span> <span class="mi">152</span><span class="p">,</span>
      <span class="nt">&#34;name&#34;</span><span class="p">:</span> <span class="s2">&#34;nldm-1f61&#34;</span>
    <span class="p">},</span>
    <span class="p">{</span>
      <span class="nt">&#34;id&#34;</span><span class="p">:</span> <span class="mi">153</span><span class="p">,</span>
      <span class="nt">&#34;name&#34;</span><span class="p">:</span> <span class="s2">&#34;nldm-n86u&#34;</span>
    <span class="p">},</span>
    <span class="p">{</span>
      <span class="nt">&#34;id&#34;</span><span class="p">:</span> <span class="mi">154</span><span class="p">,</span>
      <span class="nt">&#34;name&#34;</span><span class="p">:</span> <span class="s2">&#34;nldm-bmga&#34;</span>
    <span class="p">}</span>
    <span class="err">...</span>
  <span class="p">]</span>
<span class="p">}</span></code></pre></div>
<p>Then we convert that from json using <code>$data = get-content jamf.json | convertfrom-json</code> to put it into a variable with the computers ID per line. When we have that file we use it in the Jamf_DATA function and eventually end up with a log file containg the computers data as following (anonymised):</p>
<div class="highlight"><pre class="chroma"><code class="language-json" data-lang="json"><span class="mi">03</span><span class="err">/</span><span class="mi">01</span><span class="err">/</span><span class="mi">2019</span> <span class="mi">15</span><span class="err">:</span><span class="mi">29</span><span class="err">:</span><span class="mi">08</span> <span class="p">{</span>
  <span class="nt">&#34;computer&#34;</span><span class="p">:</span> <span class="p">{</span>
    <span class="nt">&#34;general&#34;</span><span class="p">:</span> <span class="p">{</span>
      <span class="nt">&#34;id&#34;</span><span class="p">:</span> <span class="mi">226</span><span class="p">,</span>
      <span class="nt">&#34;name&#34;</span><span class="p">:</span> <span class="s2">&#34;nldm-z97e&#34;</span><span class="p">,</span>
      <span class="nt">&#34;mac_address&#34;</span><span class="p">:</span> <span class="s2">&#34;xxx&#34;</span><span class="p">,</span>
      <span class="nt">&#34;alt_mac_address&#34;</span><span class="p">:</span> <span class="s2">&#34;xxx&#34;</span><span class="p">,</span>
      <span class="nt">&#34;ip_address&#34;</span><span class="p">:</span> <span class="s2">&#34;xxx&#34;</span><span class="p">,</span>
      <span class="nt">&#34;last_reported_ip&#34;</span><span class="p">:</span> <span class="s2">&#34;xxx&#34;</span><span class="p">,</span>
      <span class="nt">&#34;serial_number&#34;</span><span class="p">:</span> <span class="s2">&#34;xxx&#34;</span><span class="p">,</span>
      <span class="nt">&#34;udid&#34;</span><span class="p">:</span> <span class="s2">&#34;xxx&#34;</span><span class="p">,</span>
      <span class="nt">&#34;jamf_version&#34;</span><span class="p">:</span> <span class="s2">&#34;10.9.0-t1544463445&#34;</span><span class="p">,</span>
      <span class="nt">&#34;platform&#34;</span><span class="p">:</span> <span class="s2">&#34;Mac&#34;</span><span class="p">,</span>
      <span class="nt">&#34;barcode_1&#34;</span><span class="p">:</span> <span class="s2">&#34;&#34;</span><span class="p">,</span>
      <span class="nt">&#34;barcode_2&#34;</span><span class="p">:</span> <span class="s2">&#34;&#34;</span><span class="p">,</span>
      <span class="nt">&#34;asset_tag&#34;</span><span class="p">:</span> <span class="s2">&#34;&#34;</span><span class="p">,</span>
      <span class="nt">&#34;remote_management&#34;</span><span class="p">:</span> <span class="p">{</span>
        <span class="nt">&#34;managed&#34;</span><span class="p">:</span> <span class="kc">true</span><span class="p">,</span>
        <span class="nt">&#34;management_username&#34;</span><span class="p">:</span> <span class="s2">&#34;macadmin&#34;</span><span class="p">,</span>
        <span class="nt">&#34;management_password_sha256&#34;</span><span class="p">:</span> <span class="s2">&#34;xxx&#34;</span>
      <span class="p">},</span>
      <span class="nt">&#34;mdm_capable&#34;</span><span class="p">:</span> <span class="kc">true</span><span class="p">,</span>
      <span class="nt">&#34;mdm_capable_users&#34;</span><span class="p">:</span> <span class="p">{</span>
        <span class="nt">&#34;mdm_capable_user&#34;</span><span class="p">:</span> <span class="s2">&#34;xxx&#34;</span>
      <span class="p">},</span>
      <span class="nt">&#34;management_status&#34;</span><span class="p">:</span> <span class="p">{</span>
        <span class="nt">&#34;enrolled_via_dep&#34;</span><span class="p">:</span> <span class="kc">true</span><span class="p">,</span>
        <span class="nt">&#34;user_approved_enrollment&#34;</span><span class="p">:</span> <span class="kc">true</span><span class="p">,</span>
        <span class="nt">&#34;user_approved_mdm&#34;</span><span class="p">:</span> <span class="kc">true</span>
      <span class="p">},</span>
      <span class="nt">&#34;report_date&#34;</span><span class="p">:</span> <span class="s2">&#34;2019-03-01 09:49:19&#34;</span><span class="p">,</span>
      <span class="nt">&#34;report_date_epoch&#34;</span><span class="p">:</span> <span class="mi">1551433759204</span><span class="p">,</span>
      <span class="nt">&#34;report_date_utc&#34;</span><span class="p">:</span> <span class="s2">&#34;2019-03-01T09:49:19.204+0000&#34;</span><span class="p">,</span>
      <span class="nt">&#34;last_contact_time&#34;</span><span class="p">:</span> <span class="s2">&#34;2019-03-01 14:10:28&#34;</span><span class="p">,</span>
      <span class="nt">&#34;last_contact_time_epoch&#34;</span><span class="p">:</span> <span class="mi">1551449428195</span><span class="p">,</span>
      <span class="nt">&#34;last_contact_time_utc&#34;</span><span class="p">:</span> <span class="s2">&#34;2019-03-01T14:10:28.195+0000&#34;</span><span class="p">,</span>
      <span class="nt">&#34;initial_entry_date&#34;</span><span class="p">:</span> <span class="s2">&#34;2019-03-01&#34;</span><span class="p">,</span>
      <span class="nt">&#34;initial_entry_date_epoch&#34;</span><span class="p">:</span> <span class="mi">1551429401260</span><span class="p">,</span>
      <span class="nt">&#34;initial_entry_date_utc&#34;</span><span class="p">:</span> <span class="s2">&#34;2019-03-01T08:36:41.260+0000&#34;</span><span class="p">,</span>
      <span class="nt">&#34;last_cloud_backup_date_epoch&#34;</span><span class="p">:</span> <span class="mi">0</span><span class="p">,</span>
      <span class="nt">&#34;last_cloud_backup_date_utc&#34;</span><span class="p">:</span> <span class="s2">&#34;&#34;</span><span class="p">,</span>
      <span class="nt">&#34;last_enrolled_date_epoch&#34;</span><span class="p">:</span> <span class="mi">1551429428657</span><span class="p">,</span>
      <span class="nt">&#34;last_enrolled_date_utc&#34;</span><span class="p">:</span> <span class="s2">&#34;2019-03-01T08:37:08.657+0000&#34;</span><span class="p">,</span>
      <span class="nt">&#34;distribution_point&#34;</span><span class="p">:</span> <span class="s2">&#34;&#34;</span><span class="p">,</span>
      <span class="nt">&#34;sus&#34;</span><span class="p">:</span> <span class="s2">&#34;&#34;</span><span class="p">,</span>
      <span class="nt">&#34;netboot_server&#34;</span><span class="p">:</span> <span class="s2">&#34;&#34;</span><span class="p">,</span>
      <span class="nt">&#34;site&#34;</span><span class="p">:</span> <span class="p">{</span>
        <span class="nt">&#34;id&#34;</span><span class="p">:</span> <span class="mi">-1</span><span class="p">,</span>
        <span class="nt">&#34;name&#34;</span><span class="p">:</span> <span class="s2">&#34;None&#34;</span>
      <span class="p">},</span>
      <span class="nt">&#34;itunes_store_account_is_active&#34;</span><span class="p">:</span> <span class="kc">false</span>
    <span class="p">},</span>
    <span class="nt">&#34;location&#34;</span><span class="p">:</span> <span class="p">{</span>
      <span class="nt">&#34;username&#34;</span><span class="p">:</span> <span class="s2">&#34;xxx&#34;</span><span class="p">,</span>
      <span class="nt">&#34;realname&#34;</span><span class="p">:</span> <span class="s2">&#34;xxx&#34;</span><span class="p">,</span>
      <span class="nt">&#34;real_name&#34;</span><span class="p">:</span> <span class="s2">&#34;xxx&#34;</span><span class="p">,</span>
      <span class="nt">&#34;email_address&#34;</span><span class="p">:</span> <span class="s2">&#34;xxx&#34;</span><span class="p">,</span>
      <span class="nt">&#34;position&#34;</span><span class="p">:</span> <span class="s2">&#34;Developer&#34;</span><span class="p">,</span>
      <span class="nt">&#34;phone&#34;</span><span class="p">:</span> <span class="s2">&#34;&#34;</span><span class="p">,</span>
      <span class="nt">&#34;phone_number&#34;</span><span class="p">:</span> <span class="s2">&#34;&#34;</span><span class="p">,</span>
      <span class="nt">&#34;department&#34;</span><span class="p">:</span> <span class="s2">&#34;&#34;</span><span class="p">,</span>
      <span class="nt">&#34;building&#34;</span><span class="p">:</span> <span class="s2">&#34;xxx&#34;</span><span class="p">,</span>
      <span class="nt">&#34;room&#34;</span><span class="p">:</span> <span class="s2">&#34;&#34;</span>
    <span class="p">},</span>
    <span class="nt">&#34;hardware&#34;</span><span class="p">:</span> <span class="p">{</span>
      <span class="nt">&#34;make&#34;</span><span class="p">:</span> <span class="s2">&#34;Apple&#34;</span><span class="p">,</span>
      <span class="nt">&#34;model&#34;</span><span class="p">:</span> <span class="s2">&#34;13-inch MacBook Pro (Early 2015)&#34;</span><span class="p">,</span>
      <span class="nt">&#34;model_identifier&#34;</span><span class="p">:</span> <span class="s2">&#34;MacBookPro12,1&#34;</span><span class="p">,</span>
      <span class="nt">&#34;os_name&#34;</span><span class="p">:</span> <span class="s2">&#34;Mac OS X&#34;</span><span class="p">,</span>
      <span class="nt">&#34;os_version&#34;</span><span class="p">:</span> <span class="s2">&#34;10.14.3&#34;</span><span class="p">,</span>
      <span class="nt">&#34;os_build&#34;</span><span class="p">:</span> <span class="s2">&#34;18D42&#34;</span><span class="p">,</span>
      <span class="nt">&#34;master_password_set&#34;</span><span class="p">:</span> <span class="kc">false</span><span class="p">,</span>
      <span class="nt">&#34;active_directory_status&#34;</span><span class="p">:</span> <span class="s2">&#34;xxx&#34;</span><span class="p">,</span>
      <span class="nt">&#34;service_pack&#34;</span><span class="p">:</span> <span class="s2">&#34;&#34;</span><span class="p">,</span>
      <span class="nt">&#34;processor_type&#34;</span><span class="p">:</span> <span class="s2">&#34;Intel Core i7&#34;</span><span class="p">,</span>
      <span class="nt">&#34;processor_architecture&#34;</span><span class="p">:</span> <span class="s2">&#34;x86_64&#34;</span><span class="p">,</span>
      <span class="nt">&#34;processor_speed&#34;</span><span class="p">:</span> <span class="mi">0</span><span class="p">,</span>
      <span class="nt">&#34;processor_speed_mhz&#34;</span><span class="p">:</span> <span class="mi">0</span><span class="p">,</span>
      <span class="nt">&#34;number_processors&#34;</span><span class="p">:</span> <span class="mi">1</span><span class="p">,</span>
      <span class="nt">&#34;number_cores&#34;</span><span class="p">:</span> <span class="mi">2</span><span class="p">,</span>
      <span class="nt">&#34;total_ram&#34;</span><span class="p">:</span> <span class="mi">16384</span><span class="p">,</span>
      <span class="nt">&#34;total_ram_mb&#34;</span><span class="p">:</span> <span class="mi">16384</span><span class="p">,</span>
      <span class="nt">&#34;boot_rom&#34;</span><span class="p">:</span> <span class="s2">&#34;180.0.0.0.0&#34;</span><span class="p">,</span>
      <span class="nt">&#34;bus_speed&#34;</span><span class="p">:</span> <span class="mi">0</span><span class="p">,</span>
      <span class="nt">&#34;bus_speed_mhz&#34;</span><span class="p">:</span> <span class="mi">0</span><span class="p">,</span>
      <span class="nt">&#34;battery_capacity&#34;</span><span class="p">:</span> <span class="mi">96</span><span class="p">,</span>
      <span class="nt">&#34;cache_size&#34;</span><span class="p">:</span> <span class="mi">4096</span><span class="p">,</span>
      <span class="nt">&#34;cache_size_kb&#34;</span><span class="p">:</span> <span class="mi">4096</span><span class="p">,</span>
      <span class="nt">&#34;available_ram_slots&#34;</span><span class="p">:</span> <span class="mi">0</span><span class="p">,</span>
      <span class="nt">&#34;optical_drive&#34;</span><span class="p">:</span> <span class="s2">&#34;&#34;</span><span class="p">,</span>
      <span class="nt">&#34;nic_speed&#34;</span><span class="p">:</span> <span class="s2">&#34;10/100/1000&#34;</span><span class="p">,</span>
      <span class="nt">&#34;smc_version&#34;</span><span class="p">:</span> <span class="s2">&#34;2.28f7&#34;</span><span class="p">,</span>
      <span class="nt">&#34;ble_capable&#34;</span><span class="p">:</span> <span class="kc">true</span><span class="p">,</span>
      <span class="nt">&#34;sip_status&#34;</span><span class="p">:</span> <span class="s2">&#34;Enabled&#34;</span><span class="p">,</span>
      <span class="nt">&#34;gatekeeper_status&#34;</span><span class="p">:</span> <span class="s2">&#34;App Store and identified developers&#34;</span><span class="p">,</span>
      <span class="nt">&#34;xprotect_version&#34;</span><span class="p">:</span> <span class="s2">&#34;2101&#34;</span><span class="p">,</span>
      <span class="nt">&#34;institutional_recovery_key&#34;</span><span class="p">:</span> <span class="s2">&#34;Not Present&#34;</span><span class="p">,</span>
      <span class="nt">&#34;disk_encryption_configuration&#34;</span><span class="p">:</span> <span class="s2">&#34;&#34;</span><span class="p">,</span>
      <span class="nt">&#34;filevault2_users&#34;</span><span class="p">:</span> <span class="p">[],</span>
      <span class="nt">&#34;storage&#34;</span><span class="p">:</span> <span class="p">[</span>
        <span class="p">{</span>
          <span class="nt">&#34;disk&#34;</span><span class="p">:</span> <span class="s2">&#34;disk0&#34;</span><span class="p">,</span>
          <span class="nt">&#34;model&#34;</span><span class="p">:</span> <span class="s2">&#34;APPLE SSD SM0512G&#34;</span><span class="p">,</span>
          <span class="nt">&#34;revision&#34;</span><span class="p">:</span> <span class="s2">&#34;BXZ13A0Q&#34;</span><span class="p">,</span>
          <span class="nt">&#34;serial_number&#34;</span><span class="p">:</span> <span class="s2">&#34;xxx&#34;</span><span class="p">,</span>
          <span class="nt">&#34;size&#34;</span><span class="p">:</span> <span class="mi">0</span><span class="p">,</span>
          <span class="nt">&#34;drive_capacity_mb&#34;</span><span class="p">:</span> <span class="mi">0</span><span class="p">,</span>
          <span class="nt">&#34;connection_type&#34;</span><span class="p">:</span> <span class="s2">&#34;NO&#34;</span><span class="p">,</span>
          <span class="nt">&#34;smart_status&#34;</span><span class="p">:</span> <span class="s2">&#34;Verified&#34;</span><span class="p">,</span>
          <span class="nt">&#34;partition&#34;</span><span class="p">:</span> <span class="p">{</span>
            <span class="nt">&#34;name&#34;</span><span class="p">:</span> <span class="s2">&#34;Macintosh HD (Boot Partition)&#34;</span><span class="p">,</span>
            <span class="nt">&#34;size&#34;</span><span class="p">:</span> <span class="mi">476902</span><span class="p">,</span>
            <span class="nt">&#34;type&#34;</span><span class="p">:</span> <span class="s2">&#34;boot&#34;</span><span class="p">,</span>
            <span class="nt">&#34;partition_capacity_mb&#34;</span><span class="p">:</span> <span class="mi">476902</span><span class="p">,</span>
            <span class="nt">&#34;percentage_full&#34;</span><span class="p">:</span> <span class="mi">3</span><span class="p">,</span>
            <span class="nt">&#34;filevault_status&#34;</span><span class="p">:</span> <span class="s2">&#34;Not Encrypted&#34;</span><span class="p">,</span>
            <span class="nt">&#34;filevault_percent&#34;</span><span class="p">:</span> <span class="mi">0</span><span class="p">,</span>
            <span class="nt">&#34;filevault2_status&#34;</span><span class="p">:</span> <span class="s2">&#34;Not Encrypted&#34;</span><span class="p">,</span>
            <span class="nt">&#34;filevault2_percent&#34;</span><span class="p">:</span> <span class="mi">0</span><span class="p">,</span>
            <span class="nt">&#34;boot_drive_available_mb&#34;</span><span class="p">:</span> <span class="mi">0</span><span class="p">,</span>
            <span class="nt">&#34;lvgUUID&#34;</span><span class="p">:</span> <span class="s2">&#34;&#34;</span><span class="p">,</span>
            <span class="nt">&#34;lvUUID&#34;</span><span class="p">:</span> <span class="s2">&#34;&#34;</span><span class="p">,</span>
            <span class="nt">&#34;pvUUID&#34;</span><span class="p">:</span> <span class="s2">&#34;&#34;</span>
          <span class="p">}</span>
        <span class="p">},</span>
        <span class="p">{</span>
          <span class="nt">&#34;disk&#34;</span><span class="p">:</span> <span class="s2">&#34;disk2&#34;</span><span class="p">,</span>
          <span class="nt">&#34;model&#34;</span><span class="p">:</span> <span class="s2">&#34;&#34;</span><span class="p">,</span>
          <span class="nt">&#34;revision&#34;</span><span class="p">:</span> <span class="s2">&#34;&#34;</span><span class="p">,</span>
          <span class="nt">&#34;serial_number&#34;</span><span class="p">:</span> <span class="s2">&#34;&#34;</span><span class="p">,</span>
          <span class="nt">&#34;size&#34;</span><span class="p">:</span> <span class="mi">0</span><span class="p">,</span>
          <span class="nt">&#34;drive_capacity_mb&#34;</span><span class="p">:</span> <span class="mi">0</span><span class="p">,</span>
          <span class="nt">&#34;connection_type&#34;</span><span class="p">:</span> <span class="s2">&#34;&#34;</span><span class="p">,</span>
          <span class="nt">&#34;smart_status&#34;</span><span class="p">:</span> <span class="s2">&#34;&#34;</span><span class="p">,</span>
          <span class="nt">&#34;partition&#34;</span><span class="p">:</span> <span class="p">{</span>
            <span class="nt">&#34;name&#34;</span><span class="p">:</span> <span class="s2">&#34;Google Chrome&#34;</span><span class="p">,</span>
            <span class="nt">&#34;size&#34;</span><span class="p">:</span> <span class="mi">195</span><span class="p">,</span>
            <span class="nt">&#34;type&#34;</span><span class="p">:</span> <span class="s2">&#34;other&#34;</span><span class="p">,</span>
            <span class="nt">&#34;partition_capacity_mb&#34;</span><span class="p">:</span> <span class="mi">195</span><span class="p">,</span>
            <span class="nt">&#34;percentage_full&#34;</span><span class="p">:</span> <span class="mi">100</span><span class="p">,</span>
            <span class="nt">&#34;filevault_status&#34;</span><span class="p">:</span> <span class="s2">&#34;Not Encrypted&#34;</span><span class="p">,</span>
            <span class="nt">&#34;filevault_percent&#34;</span><span class="p">:</span> <span class="mi">0</span><span class="p">,</span>
            <span class="nt">&#34;filevault2_status&#34;</span><span class="p">:</span> <span class="s2">&#34;Not Encrypted&#34;</span><span class="p">,</span>
            <span class="nt">&#34;filevault2_percent&#34;</span><span class="p">:</span> <span class="mi">0</span>
          <span class="p">}</span>
        <span class="p">}</span>
      <span class="p">],</span>
      <span class="nt">&#34;mapped_printers&#34;</span><span class="p">:</span> <span class="p">[</span>
        <span class="p">{</span>
          <span class="nt">&#34;name&#34;</span><span class="p">:</span> <span class="s2">&#34;xxx @ xxx&#34;</span><span class="p">,</span>
          <span class="nt">&#34;uri&#34;</span><span class="p">:</span> <span class="s2">&#34;ipp://xxx%20%40%xxx%E2%80%99s%20MacBook%20Pro._ipp._tcp.local./cups&#34;</span><span class="p">,</span>
          <span class="nt">&#34;type&#34;</span><span class="p">:</span> <span class="s2">&#34;Xerox WorkCentre 6605DN&#34;</span><span class="p">,</span>
          <span class="nt">&#34;location&#34;</span><span class="p">:</span> <span class="s2">&#34;Weena Copyroom 8A&#34;</span>
        <span class="p">}</span>
      <span class="p">]</span>
    <span class="p">},</span>
    <span class="nt">&#34;extension_attributes&#34;</span><span class="p">:</span> <span class="p">[</span>
      <span class="p">{</span>
        <span class="nt">&#34;id&#34;</span><span class="p">:</span> <span class="mi">1</span><span class="p">,</span>
        <span class="nt">&#34;name&#34;</span><span class="p">:</span> <span class="s2">&#34;coolblue-enrolled&#34;</span><span class="p">,</span>
        <span class="nt">&#34;type&#34;</span><span class="p">:</span> <span class="s2">&#34;String&#34;</span><span class="p">,</span>
        <span class="nt">&#34;value&#34;</span><span class="p">:</span> <span class="s2">&#34;3&#34;</span>
      <span class="p">},</span>
      <span class="p">{</span>
        <span class="nt">&#34;id&#34;</span><span class="p">:</span> <span class="mi">7</span><span class="p">,</span>
        <span class="nt">&#34;name&#34;</span><span class="p">:</span> <span class="s2">&#34;coolblue-filevault&#34;</span><span class="p">,</span>
        <span class="nt">&#34;type&#34;</span><span class="p">:</span> <span class="s2">&#34;String&#34;</span><span class="p">,</span>
        <span class="nt">&#34;value&#34;</span><span class="p">:</span> <span class="s2">&#34;FileVault is Off.&#34;</span>
      <span class="p">},</span>
      <span class="p">{</span>
        <span class="nt">&#34;id&#34;</span><span class="p">:</span> <span class="mi">4</span><span class="p">,</span>
        <span class="nt">&#34;name&#34;</span><span class="p">:</span> <span class="s2">&#34;coolblue-initial-hostname&#34;</span><span class="p">,</span>
        <span class="nt">&#34;type&#34;</span><span class="p">:</span> <span class="s2">&#34;String&#34;</span><span class="p">,</span>
        <span class="nt">&#34;value&#34;</span><span class="p">:</span> <span class="s2">&#34;nldm-z97e&#34;</span>
      <span class="p">},</span>
      <span class="p">{</span>
        <span class="nt">&#34;id&#34;</span><span class="p">:</span> <span class="mi">5</span><span class="p">,</span>
        <span class="nt">&#34;name&#34;</span><span class="p">:</span> <span class="s2">&#34;Host name&#34;</span><span class="p">,</span>
        <span class="nt">&#34;type&#34;</span><span class="p">:</span> <span class="s2">&#34;String&#34;</span><span class="p">,</span>
        <span class="nt">&#34;value&#34;</span><span class="p">:</span> <span class="s2">&#34;nldm-z97e&#34;</span>
      <span class="p">},</span>
      <span class="p">{</span>
        <span class="nt">&#34;id&#34;</span><span class="p">:</span> <span class="mi">2</span><span class="p">,</span>
        <span class="nt">&#34;name&#34;</span><span class="p">:</span> <span class="s2">&#34;Last User&#34;</span><span class="p">,</span>
        <span class="nt">&#34;type&#34;</span><span class="p">:</span> <span class="s2">&#34;String&#34;</span><span class="p">,</span>
        <span class="nt">&#34;value&#34;</span><span class="p">:</span> <span class="s2">&#34;&#34;</span>
      <span class="p">},</span>
      <span class="p">{</span>
        <span class="nt">&#34;id&#34;</span><span class="p">:</span> <span class="mi">3</span><span class="p">,</span>
        <span class="nt">&#34;name&#34;</span><span class="p">:</span> <span class="s2">&#34;R&#34;</span><span class="p">,</span>
        <span class="nt">&#34;type&#34;</span><span class="p">:</span> <span class="s2">&#34;String&#34;</span><span class="p">,</span>
        <span class="nt">&#34;value&#34;</span><span class="p">:</span> <span class="s2">&#34;Not Installed&#34;</span>
      <span class="p">},</span>
      <span class="p">{</span>
        <span class="nt">&#34;id&#34;</span><span class="p">:</span> <span class="mi">6</span><span class="p">,</span>
        <span class="nt">&#34;name&#34;</span><span class="p">:</span> <span class="s2">&#34;Uptime&#34;</span><span class="p">,</span>
        <span class="nt">&#34;type&#34;</span><span class="p">:</span> <span class="s2">&#34;String&#34;</span><span class="p">,</span>
        <span class="nt">&#34;value&#34;</span><span class="p">:</span> <span class="s2">&#34;10:49  up  1:06, 1 user, load averages: 2.13 1.67 1.48&#34;</span>
      <span class="p">}</span>
    <span class="p">]</span>
  <span class="p">}</span>
<span class="p">}</span></code></pre></div>
<p>The script is creating <code>/var/log/jamf/jamf-monitor</code> which is being monitored by the SplunkForwarder using the following inputs.conf.</p>
<div class="highlight"><pre class="chroma"><code class="language-textile" data-lang="textile">[monitor:///var/log/jamf/jamf-monitor]
index=production_jamf
sourcetype=jamf
disabled = false</code></pre></div>
<p>Eventually we&rsquo;re pushing the data into an index in our Splunkcloud environment. Due to the fact we&rsquo;re pushing JSON through our SplunkForwarder we needed to create a new sourcetype and adjust it for the JSON we&rsquo;re pushing to Splunk. The actual changes made are the following:</p>
<div class="highlight"><pre class="chroma"><code class="language-textile" data-lang="textile">Indexed Extractions   none
SEDCMD-strip_prefix   s/^[^{]+//g
KV_MODE               json</code></pre></div>
<p>This results in the following dashboard 🧐.</p>


    <figure class="center" >
        <img src="/images/jamf-to-splunk.png"  alt="Jamf "   style="border-radius: 8px;"  />

        
    </figure>


]]></content>
        </item>
        
        <item>
            <title>Jamf Self Service and Win10 VMs</title>
            <link>/posts/2019/03/jamf-self-service-and-win10-vms/</link>
            <pubDate>Fri, 01 Mar 2019 13:57:04 +0100</pubDate>
            
            <guid>/posts/2019/03/jamf-self-service-and-win10-vms/</guid>
            <description> Auto install Win 10 VBox VM&amp;rsquo;s through Jamf self service </description>
            <content type="html"><![CDATA[

<h1 id="auto-install-win-10-vbox-vm-s-through-jamf-self-service">Auto install Win 10 VBox VM&rsquo;s through Jamf self service</h1>
]]></content>
        </item>
        
        <item>
            <title>Rename machine script</title>
            <link>/posts/2019/02/rename-machine-script/</link>
            <pubDate>Thu, 28 Feb 2019 19:53:04 +0100</pubDate>
            
            <guid>/posts/2019/02/rename-machine-script/</guid>
            <description>This post is to test the PrismJS syntax highlighting.
#!/bin/bash  ##################### ##### Variables ##### ##################### # $LDAP_HOST = ldap host (jamf parameter 4) # $LDAP_PASSWORD = ldap password (jamf parameter 5) # $LDAP_USER = ldap user (jamf parameter 6) # $OU (jamf parameter 7) # $API_USER (jamf parameter 8) # $API_PASSWORD (jamf parameter 9) ############################ ##### Script Variables ##### ############################ # $EXISTING_RECORDS = an LDAP query to get all existing records.</description>
            <content type="html"><![CDATA[<p>This post is to test the PrismJS syntax highlighting.</p>
<div class="highlight"><pre class="chroma"><code class="language-bash" data-lang="bash"><span class="cp">#!/bin/bash
</span><span class="cp"></span>
<span class="c1">#####################</span>
<span class="c1">##### Variables #####</span>
<span class="c1">#####################</span>
<span class="c1"># $LDAP_HOST = ldap host (jamf parameter 4)</span>
<span class="c1"># $LDAP_PASSWORD = ldap password (jamf parameter 5)</span>
<span class="c1"># $LDAP_USER = ldap user (jamf parameter 6)</span>
<span class="c1"># $OU (jamf parameter 7)</span>
<span class="c1"># $API_USER (jamf parameter 8)</span>
<span class="c1"># $API_PASSWORD (jamf parameter 9)</span>

<span class="c1">############################</span>
<span class="c1">##### Script Variables #####</span>
<span class="c1">############################</span>
<span class="c1"># $EXISTING_RECORDS = an LDAP query to get all existing records.</span>
<span class="c1"># $DEVELOPERS = an API query to check if the current user ($3), is a developer. (checks if a user is member of DLG-APP-JAMF-Clients-Developers).</span>
<span class="c1"># $UUID = A 4 digit random generated alphanumeric string.</span>
<span class="c1"># $PREFIX = the Hostname prefix we put before the random generated alphanumeric string.</span>
<span class="c1"># $NEW_HOSTNAME = putting the prefix and Unique alphanumeric string together resulting the new unique hostname.</span>
<span class="c1"># $BAD_WORDS_LIST = dowloads a list with unauthorized words from the Office Automation repository (Github RAW).</span>

<span class="c1"># bash generate random 4 character alphanumeric string (upper and lowercase) and set variable</span>
<span class="nv">UUID</span><span class="o">=</span><span class="k">$(</span>cat /dev/random <span class="p">|</span> <span class="nv">LC_CTYPE</span><span class="o">=</span>C tr -dc <span class="s1">&#39;a-z0-9&#39;</span> <span class="p">|</span> fold -w <span class="m">4</span> <span class="p">|</span> head -n <span class="m">1</span><span class="k">)</span>

<span class="c1"># populate ldap specific variables and credentials</span>
<span class="nv">LDAP_HOST</span><span class="o">=</span><span class="nv">$4</span> <span class="c1"># $LDAP_HOST = ldap host (jamf parameter 4)</span>
<span class="nv">LDAP_PASSWORD</span><span class="o">=</span><span class="nv">$5</span> <span class="c1"># $LDAP_PASSWORD = ldap password (jamf parameter 5)</span>
<span class="nv">LDAP_USER</span><span class="o">=</span><span class="nv">$6</span> <span class="c1"># $LDAP_USER = ldap user (jamf parameter 6)</span>
<span class="nv">OU</span><span class="o">=</span><span class="nv">$7</span> <span class="c1"># $OU (jamf parameter 7)</span>
<span class="nv">API_URL</span><span class="o">=</span><span class="k">$(</span>defaults <span class="nb">read</span> /Library/Preferences/com.jamfsoftware.jamf.plist jss_url<span class="k">)</span>
<span class="nv">API_USER</span><span class="o">=</span><span class="nv">$8</span> <span class="c1">#(jamf parameter 10)</span>
<span class="nv">API_PASSWORD</span><span class="o">=</span><span class="nv">$9</span> <span class="c1">#(jamf parameter 11)</span>
<span class="nv">EXISTING_RECORDS</span><span class="o">=</span><span class="k">$(</span>ldapsearch -h <span class="s2">&#34;</span><span class="nv">$LDAP_HOST</span><span class="s2">&#34;</span> -p <span class="m">389</span> -x -D <span class="s2">&#34;</span><span class="nv">$LDAP_USER</span><span class="s2">&#34;</span> -w <span class="s2">&#34;</span><span class="nv">$LDAP_PASSWORD</span><span class="s2">&#34;</span> -b <span class="s2">&#34;</span><span class="nv">$OU</span><span class="s2">&#34;</span> <span class="p">|</span> grep name: <span class="p">|</span> sed <span class="s1">&#39;s/name: //&#39;</span><span class="k">)</span>
<span class="nv">DEVELOPERS</span><span class="o">=</span><span class="k">$(</span>curl -s -u <span class="nv">$API_USER</span>:<span class="nv">$API_PASSWORD</span> -H <span class="s2">&#34;Accept: application/json&#34;</span> -X GET <span class="s2">&#34;</span><span class="nv">$API_URL</span><span class="s2">&#34;</span>JSSResource/ldapservers/name/<span class="nv">$LDAP_HOST</span>/group/DLG-APP-JAMF-Clients-Developers/user/<span class="nv">$3</span> <span class="p">|</span> sed -e <span class="s1">&#39;s/^.*&#34;is_member&#34;:&#34;\([^&#34;]*\)&#34;.*$/\1/&#39;</span><span class="k">)</span>
<span class="nv">BAD_WORDS_LIST</span><span class="o">=</span><span class="k">$(</span>curl -H <span class="s1">&#39;Authorization: token $git_token&#39;</span> -H <span class="s1">&#39;Accept: application/vnd.github.v4.raw&#39;</span> -L https://api.github.com/repos/coolblue-development/office-automation/contents/macOS/bad_words<span class="k">)</span>
<span class="nv">SERIALNUMBER</span><span class="o">=</span><span class="k">$(</span>system_profiler SPHardwareDataType <span class="p">|</span> grep <span class="s1">&#39;Serial Number (system)&#39;</span> <span class="p">|</span> awk <span class="s1">&#39;{print $NF}&#39;</span><span class="k">)</span>

<span class="c1">#####################</span>
<span class="c1">##### Functions #####</span>
<span class="c1">#####################</span>

<span class="c1">### generate new hostname based on prefix and randomized UUID</span>
generate_hostname<span class="o">()</span> <span class="o">{</span>
    <span class="k">if</span> <span class="o">[[</span> <span class="nv">$DEVELOPERS</span> <span class="o">==</span> <span class="s2">&#34;Yes&#34;</span> <span class="o">]]</span><span class="p">;</span> <span class="k">then</span>
        <span class="nv">PREFIX</span><span class="o">=</span>nldm-
    <span class="k">else</span>
        <span class="nv">PREFIX</span><span class="o">=</span>nllm-
    <span class="k">fi</span>

    <span class="nv">NEW_HOSTNAME</span><span class="o">=</span><span class="nv">$PREFIX$UUID</span>

<span class="k">while</span> <span class="nb">true</span>
<span class="k">do</span>
    <span class="k">if</span> <span class="o">[[</span> <span class="nv">$EXISTING_RECORDS</span> <span class="o">=</span>~ <span class="nv">$NEW_HOSTNAME</span> <span class="o">||</span> <span class="nv">$BAD_WORDS_LIST</span> <span class="o">=</span>~ <span class="nv">$UUID</span> <span class="o">]]</span><span class="p">;</span> <span class="k">then</span>
        sleep <span class="m">1</span>
    <span class="k">else</span>
        /usr/sbin/scutil --set ComputerName <span class="s2">&#34;</span><span class="nv">$NEW_HOSTNAME</span><span class="s2">&#34;</span>
        /usr/sbin/scutil --set LocalHostName <span class="s2">&#34;</span><span class="nv">$NEW_HOSTNAME</span><span class="s2">&#34;</span>
        /usr/sbin/scutil --set HostName <span class="s2">&#34;</span><span class="nv">$NEW_HOSTNAME</span><span class="s2">&#34;</span>
        <span class="nb">break</span>
    <span class="k">fi</span>
<span class="k">done</span>
<span class="o">}</span>
<span class="c1"># Set the hostname in EA</span>

coolblue-initial-hostname<span class="o">()</span> <span class="o">{</span>
  <span class="c1"># Create a XML payload for the Jamf API.</span>
cat <span class="s">&lt;&lt; EOF &gt; /private/tmp/coolblue-initial-hostname.xml
</span><span class="s">&lt;computer&gt;
</span><span class="s">&lt;extension_attributes&gt;
</span><span class="s">    &lt;extension_attribute&gt;
</span><span class="s">        &lt;name&gt;coolblue-initial-hostname&lt;/name&gt;
</span><span class="s">        &lt;value&gt;$NEW_HOSTNAME&lt;/value&gt;
</span><span class="s">    &lt;/extension_attribute&gt;
</span><span class="s">&lt;/extension_attributes&gt;
</span><span class="s">&lt;/computer&gt;
</span><span class="s">EOF</span>

<span class="c1"># Send payload to Jamf API.</span>
curl -s -u <span class="nv">$API_USER</span>:<span class="nv">$API_PASSWORD</span> <span class="s2">&#34;</span><span class="nv">$API_URL</span><span class="s2">&#34;</span>JSSResource/computers/serialnumber/<span class="nv">$SERIALNUMBER</span>/subset/extensionattributes -T <span class="s2">&#34;/private/tmp/coolblue-initial-hostname.xml&#34;</span> -X PUT
<span class="c1"># Remove Payload from machine.</span>
rm -f /private/tmp/coolblue-initial-hostname.xml
<span class="c1"># Done!</span>
<span class="o">}</span>


<span class="c1">##################</span>
<span class="c1">##### Script #####</span>
<span class="c1">##################</span>

generate_hostname
coolblue-initial-hostname</code></pre></div>]]></content>
        </item>
        
    </channel>
</rss>
